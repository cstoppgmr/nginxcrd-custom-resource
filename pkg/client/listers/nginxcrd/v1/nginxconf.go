/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/cstoppgmr/nginxcrd-custom-resource/pkg/apis/nginxcrd/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// NginxconfLister helps list Nginxconves.
// All objects returned here must be treated as read-only.
type NginxconfLister interface {
	// List lists all Nginxconves in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Nginxconf, err error)
	// Nginxconves returns an object that can list and get Nginxconves.
	Nginxconves(namespace string) NginxconfNamespaceLister
	NginxconfListerExpansion
}

// nginxconfLister implements the NginxconfLister interface.
type nginxconfLister struct {
	indexer cache.Indexer
}

// NewNginxconfLister returns a new NginxconfLister.
func NewNginxconfLister(indexer cache.Indexer) NginxconfLister {
	return &nginxconfLister{indexer: indexer}
}

// List lists all Nginxconves in the indexer.
func (s *nginxconfLister) List(selector labels.Selector) (ret []*v1.Nginxconf, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.Nginxconf))
	})
	return ret, err
}

// Nginxconves returns an object that can list and get Nginxconves.
func (s *nginxconfLister) Nginxconves(namespace string) NginxconfNamespaceLister {
	return nginxconfNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// NginxconfNamespaceLister helps list and get Nginxconves.
// All objects returned here must be treated as read-only.
type NginxconfNamespaceLister interface {
	// List lists all Nginxconves in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Nginxconf, err error)
	// Get retrieves the Nginxconf from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.Nginxconf, error)
	NginxconfNamespaceListerExpansion
}

// nginxconfNamespaceLister implements the NginxconfNamespaceLister
// interface.
type nginxconfNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Nginxconves in the indexer for a given namespace.
func (s nginxconfNamespaceLister) List(selector labels.Selector) (ret []*v1.Nginxconf, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.Nginxconf))
	})
	return ret, err
}

// Get retrieves the Nginxconf from the indexer for a given namespace and name.
func (s nginxconfNamespaceLister) Get(name string) (*v1.Nginxconf, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("nginxconf"), name)
	}
	return obj.(*v1.Nginxconf), nil
}
